!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ActiveCgroup	cgroups/cgroups.go	/^type ActiveCgroup interface {$/;"	t
AddData	netlink/netlink_linux.go	/^func (rr *NetlinkRequest) AddData(data NetlinkRequestData) {$/;"	f
AddDefaultGw	netlink/netlink_linux.go	/^func AddDefaultGw(ip, device string) error {$/;"	f
AddDefaultGw	netlink/netlink_unsupported.go	/^func AddDefaultGw(ip, device string) error {$/;"	f
AddRoute	netlink/netlink_linux.go	/^func AddRoute(destination, source, gateway, device string) error {$/;"	f
AddRoute	netlink/netlink_unsupported.go	/^func AddRoute(destination, source, gateway, device string) error {$/;"	f
AddToBridge	netlink/netlink_linux.go	/^func AddToBridge(iface, master *net.Interface) error {$/;"	f
AddToBridge	netlink/netlink_unsupported.go	/^func AddToBridge(iface, master *net.Interface) error {$/;"	f
Apply	cgroups/fs/apply_raw.go	/^func Apply(c *cgroups.Cgroup, pid int) (cgroups.ActiveCgroup, error) {$/;"	f
Apply	cgroups/systemd/apply_nosystemd.go	/^func Apply(c *cgroups.Cgroup, pid int) (cgroups.ActiveCgroup, error) {$/;"	f
Apply	cgroups/systemd/apply_systemd.go	/^func Apply(c *cgroups.Cgroup, pid int) (cgroups.ActiveCgroup, error) {$/;"	f
ApplyProfile	apparmor/apparmor.go	/^func ApplyProfile(name string) error {$/;"	f
ApplyProfile	apparmor/apparmor_disabled.go	/^func ApplyProfile(name string) error {$/;"	f
Attach	namespaces/std_term.go	/^func (s *StdTerminal) Attach(command *exec.Cmd) error {$/;"	f
Attach	namespaces/tty_term.go	/^func (t *TtyTerminal) Attach(command *exec.Cmd) error {$/;"	f
BlkioStatEntry	cgroups/stats.go	/^type BlkioStatEntry struct {$/;"	t
BlkioStats	cgroups/stats.go	/^type BlkioStats struct {$/;"	t
Capabilities	types.go	/^	}$/;"	t
Capability	types.go	/^type ($/;"	t
Cgroup	cgroups/cgroups.go	/^type Cgroup struct {$/;"	t
ChangeInterfaceName	network/network.go	/^func ChangeInterfaceName(old, newName string) error {$/;"	f
Child	namespaces/sync_pipe.go	/^func (s *SyncPipe) Child() *os.File {$/;"	f
Cleanup	cgroups/fs/apply_raw.go	/^func (raw *data) Cleanup() error {$/;"	f
Cleanup	cgroups/systemd/apply_systemd.go	/^func (c *systemdCgroup) Cleanup() error {$/;"	f
Close	namespaces/std_term.go	/^func (s *StdTerminal) Close() error {$/;"	f
Close	namespaces/sync_pipe.go	/^func (s *SyncPipe) Close() error {$/;"	f
Close	namespaces/tty_term.go	/^func (t *TtyTerminal) Close() error {$/;"	f
Close	netlink/netlink_linux.go	/^func (s *NetlinkSocket) Close() {$/;"	f
Container	container.go	/^type Container struct {$/;"	t
Contains	types.go	/^func (c Capabilities) Contains(capp string) bool {$/;"	f
Contains	types.go	/^func (n Namespaces) Contains(ns string) bool {$/;"	f
Context	container.go	/^type Context map[string]string$/;"	t
CopyLevel	selinux/selinux.go	/^func CopyLevel(src, dest string) (string, error) {$/;"	f
CpuStats	cgroups/stats.go	/^type CpuStats struct {$/;"	t
CpuUsage	cgroups/stats.go	/^type CpuUsage struct {$/;"	t
Create	network/loopback.go	/^func (l *Loopback) Create(n *libcontainer.Network, nspid int, context libcontainer.Context) error {$/;"	f
Create	network/netns.go	/^func (v *NetNS) Create(n *libcontainer.Network, nspid int, context libcontainer.Context) error {$/;"	f
Create	network/veth.go	/^func (v *Veth) Create(n *libcontainer.Network, nspid int, context libcontainer.Context) error {$/;"	f
CreateBridge	netlink/netlink_linux.go	/^func CreateBridge(name string, setMacAddr bool) error {$/;"	f
CreateBridge	netlink/netlink_unsupported.go	/^func CreateBridge(name string, setMacAddr bool) error {$/;"	f
CreateCommand	namespaces/create.go	/^type CreateCommand func(container *libcontainer.Container, console, rootfs, dataPath, init string, childPipe *os.File, args []string) *exec.Cmd$/;"	t
CreateDeviceNode	mount/nodes/nodes.go	/^func CreateDeviceNode(rootfs string, node *devices.Device) error {$/;"	f
CreateDeviceNodes	mount/nodes/nodes.go	/^func CreateDeviceNodes(rootfs string, nodesToCreate []*devices.Device) error {$/;"	f
CreateDeviceNodes	mount/nodes/nodes_unsupported.go	/^func CreateDeviceNodes(rootfs string, nodesToCreate []*devices.Device) error {$/;"	f
CreateVethPair	network/network.go	/^func CreateVethPair(name1, name2 string) error {$/;"	f
DEFAULT_CHANGE	netlink/netlink_linux.go	/^	IFNAMSIZ       = 16$/;"	c
DefaultAllowedDevices	devices/defaults.go	/^	}$/;"	v
DefaultAutoCreatedDevices	devices/defaults.go	/^	}, DefaultSimpleDevices...)$/;"	v
DefaultCreateCommand	namespaces/exec.go	/^func DefaultCreateCommand(container *libcontainer.Container, console, rootfs, dataPath, init string, pipe *os.File, args []string) *exec.Cmd {$/;"	f
DefaultProfilePath	apparmor/setup.go	/^const ($/;"	c
DefaultSimpleDevices	devices/defaults.go	/^var ($/;"	v
DeletePid	namespaces/pid.go	/^func DeletePid(path string) error {$/;"	f
Device	devices/devices.go	/^type Device struct {$/;"	t
Disabled	selinux/selinux.go	/^	Permissive       = 0$/;"	c
DropBoundingSet	security/capabilities/capabilities.go	/^func DropBoundingSet(container *libcontainer.Container) error {$/;"	f
DropCapabilities	security/capabilities/capabilities.go	/^func DropCapabilities(container *libcontainer.Container) error {$/;"	f
Enforcing	selinux/selinux.go	/^const ($/;"	c
ErrNotADeviceNode	devices/devices.go	/^var ($/;"	v
ErrNotFound	cgroups/cgroups.go	/^var ($/;"	v
ErrNotImplemented	netlink/netlink_unsupported.go	/^var ($/;"	v
ErrNotSupportStat	cgroups/fs/utils.go	/^var ($/;"	v
ErrNotValidFormat	cgroups/fs/utils.go	/^	ErrNotSupportStat = errors.New("stats are not supported for subsystem")$/;"	v
ErrNotValidStrategyType	network/strategy.go	/^var ($/;"	v
ErrShortResponse	netlink/netlink.go	/^	ErrWrongSockType = errors.New("Wrong socket type")$/;"	v
ErrUnkownCapability	types.go	/^	ErrUnkownNamespace  = errors.New("Unknown namespace")$/;"	v
ErrUnkownNamespace	types.go	/^var ($/;"	v
ErrUnsupported	types.go	/^	ErrUnkownCapability = errors.New("Unknown capability")$/;"	v
ErrWrongSockType	netlink/netlink.go	/^var ($/;"	v
Exec	namespaces/exec.go	/^func Exec(container *libcontainer.Container, term Terminal, rootfs, dataPath string, args []string, createCommand CreateCommand, startCallback func()) (int, error) {$/;"	f
Exec	namespaces/unsupported.go	/^func Exec(container *libcontainer.Container, term Terminal, rootfs, dataPath string, args []string, createCommand CreateCommand, startCallback func()) (int, error) {$/;"	f
ExecIn	namespaces/execin.go	/^func ExecIn(container *libcontainer.Container, nspid int, args []string) error {$/;"	f
FinalizeNamespace	namespaces/init.go	/^func FinalizeNamespace(container *libcontainer.Container) error {$/;"	f
FindCgroupMountpoint	cgroups/utils.go	/^func FindCgroupMountpoint(subsystem string) (string, error) {$/;"	f
FormatMountLabel	label/label.go	/^func FormatMountLabel(src string, mountLabel string) string {$/;"	f
FormatMountLabel	label/label_selinux.go	/^func FormatMountLabel(src, mountLabel string) string {$/;"	f
FreeLxcContexts	selinux/selinux.go	/^func FreeLxcContexts(scon string) {$/;"	f
Freeze	cgroups/fs/apply_raw.go	/^func Freeze(c *cgroups.Cgroup, state cgroups.FreezerState) error {$/;"	f
Freeze	cgroups/systemd/apply_nosystemd.go	/^func Freeze(c *cgroups.Cgroup, state cgroups.FreezerState) error {$/;"	f
Freeze	cgroups/systemd/apply_systemd.go	/^func Freeze(c *cgroups.Cgroup, state cgroups.FreezerState) error {$/;"	f
FreezerState	cgroups/cgroups.go	/^type FreezerState string$/;"	t
FreezerStats	cgroups/stats.go	/^type FreezerStats struct {$/;"	t
Frozen	cgroups/cgroups.go	/^	Undefined FreezerState = ""$/;"	c
GenLabels	label/label.go	/^func GenLabels(options string) (string, string, error) {$/;"	f
GenLabels	label/label_selinux.go	/^func GenLabels(options string) (string, string, error) {$/;"	f
GenerateRandomName	utils/utils.go	/^func GenerateRandomName(prefix string, size int) (string, error) {$/;"	f
Get	selinux/selinux.go	/^func (c SELinuxContext) Get() string {$/;"	f
Get	types.go	/^func (c Capabilities) Get(capp string) *Capability {$/;"	f
Get	types.go	/^func (n Namespaces) Get(ns string) *Namespace {$/;"	f
GetAllCapabilities	types.go	/^func GetAllCapabilities() []string {$/;"	f
GetCapability	types.go	/^func GetCapability(key string) *Capability {$/;"	f
GetCgroupAllowString	devices/devices.go	/^func (device *Device) GetCgroupAllowString() string {$/;"	f
GetDevice	devices/devices.go	/^func GetDevice(path string, cgroupPermissions string) (*Device, error) {$/;"	f
GetDeviceNumberString	devices/devices.go	/^func GetDeviceNumberString(deviceNumber int64) string {$/;"	f
GetHostDeviceNodes	devices/devices.go	/^func GetHostDeviceNodes() ([]*Device, error) {$/;"	f
GetInitCgroupDir	cgroups/utils.go	/^func GetInitCgroupDir(subsystem string) (string, error) {$/;"	f
GetLxcContexts	selinux/selinux.go	/^func GetLxcContexts() (processLabel string, fileLabel string) {$/;"	f
GetNamespace	types.go	/^func GetNamespace(key string) *Namespace {$/;"	f
GetNamespaceFlags	namespaces/exec.go	/^func GetNamespaceFlags(namespaces map[string]bool) (flag int) {$/;"	f
GetNamespaceFlags	namespaces/unsupported.go	/^func GetNamespaceFlags(namespaces map[string]bool) (flag int) {$/;"	f
GetPid	netlink/netlink_linux.go	/^func (s *NetlinkSocket) GetPid() (uint32, error) {$/;"	f
GetPidCon	label/label.go	/^func GetPidCon(pid int) (string, error) {$/;"	f
GetPidCon	label/label_selinux.go	/^func GetPidCon(pid int) (string, error) {$/;"	f
GetPids	cgroups/fs/apply_raw.go	/^func GetPids(c *cgroups.Cgroup) ([]int, error) {$/;"	f
GetPids	cgroups/systemd/apply_nosystemd.go	/^func GetPids(c *cgroups.Cgroup) ([]int, error) {$/;"	f
GetPids	cgroups/systemd/apply_systemd.go	/^func GetPids(c *cgroups.Cgroup) ([]int, error) {$/;"	f
GetProcessLabel	label/label_selinux.go	/^func GetProcessLabel() (string, error) {$/;"	f
GetStats	cgroups/fs/apply_raw.go	/^func GetStats(c *cgroups.Cgroup) (*cgroups.Stats, error) {$/;"	f
GetStats	cgroups/fs/blkio.go	/^func (s *blkioGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/cpu.go	/^func (s *cpuGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/cpuacct.go	/^func (s *cpuacctGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/devices.go	/^func (s *devicesGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/freezer.go	/^func (s *freezerGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/memory.go	/^func (s *memoryGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStats	cgroups/fs/perf_event.go	/^func (s *perfEventGroup) GetStats(d *data, stats *cgroups.Stats) error {$/;"	f
GetStrategy	network/strategy.go	/^func GetStrategy(tpe string) (NetworkStrategy, error) {$/;"	f
GetThisCgroupDir	cgroups/utils.go	/^func GetThisCgroupDir(subsystem string) (string, error) {$/;"	f
Getexeccon	selinux/selinux.go	/^func Getexeccon() (string, error) {$/;"	f
Getfscreatecon	selinux/selinux.go	/^func Getfscreatecon() (string, error) {$/;"	f
Getpidcon	selinux/selinux.go	/^func Getpidcon(pid int) (string, error) {$/;"	f
HandleAck	netlink/netlink_linux.go	/^func (s *NetlinkSocket) HandleAck(seq uint32) error {$/;"	f
IFLA_INFO_DATA	netlink/netlink_linux.go	/^	IFLA_INFO_KIND = 1$/;"	c
IFLA_INFO_KIND	netlink/netlink_linux.go	/^	DEFAULT_CHANGE = 0xFFFFFFFF$/;"	c
IFLA_NET_NS_FD	netlink/netlink_linux.go	/^	VETH_INFO_PEER = 1$/;"	c
IFNAMSIZ	netlink/netlink_linux.go	/^const ($/;"	c
IfAddrmsg	netlink/netlink_linux.go	/^type IfAddrmsg struct {$/;"	t
IfInfomsg	netlink/netlink_linux.go	/^type IfInfomsg struct {$/;"	t
Init	label/label.go	/^func Init() {$/;"	f
Init	label/label_selinux.go	/^func Init() {$/;"	f
Init	namespaces/init.go	/^func Init(container *libcontainer.Container, uncleanRootfs, consolePath string, syncPipe *SyncPipe, args []string) error {$/;"	f
Init	namespaces/unsupported.go	/^func Init(container *libcontainer.Container, uncleanRootfs, consolePath string, syncPipe *SyncPipe, args []string) error {$/;"	f
Initialize	network/loopback.go	/^func (l *Loopback) Initialize(config *libcontainer.Network, context libcontainer.Context) error {$/;"	f
Initialize	network/netns.go	/^func (v *NetNS) Initialize(config *libcontainer.Network, context libcontainer.Context) error {$/;"	f
Initialize	network/veth.go	/^func (v *Veth) Initialize(config *libcontainer.Network, context libcontainer.Context) error {$/;"	f
InitializeMountNamespace	mount/init.go	/^func InitializeMountNamespace(rootfs, console string, container *libcontainer.Container) error {$/;"	f
InitializeNetworking	namespaces/exec.go	/^func InitializeNetworking(container *libcontainer.Container, nspid int, pipe *SyncPipe) error {$/;"	f
InitializeNetworking	namespaces/unsupported.go	/^func InitializeNetworking(container *libcontainer.Container, nspid int, pipe *SyncPipe) error {$/;"	f
InstallDefaultProfile	apparmor/setup.go	/^func InstallDefaultProfile() error {$/;"	f
IntToMcs	selinux/selinux.go	/^func IntToMcs(id int, catRange uint32) string {$/;"	f
InterfaceDown	network/network.go	/^func InterfaceDown(name string) error {$/;"	f
InterfaceUp	network/network.go	/^func InterfaceUp(name string) error {$/;"	f
IsEnabled	apparmor/apparmor.go	/^func IsEnabled() bool {$/;"	f
IsEnabled	apparmor/apparmor_disabled.go	/^func IsEnabled() bool {$/;"	f
Len	netlink/netlink_linux.go	/^func (a *RtAttr) Len() int {$/;"	f
Len	netlink/netlink_linux.go	/^func (msg *IfAddrmsg) Len() int {$/;"	f
Len	netlink/netlink_linux.go	/^func (msg *IfInfomsg) Len() int {$/;"	f
Len	netlink/netlink_linux.go	/^func (msg *RtMsg) Len() int {$/;"	f
LoadContainerEnvironment	namespaces/init.go	/^func LoadContainerEnvironment(container *libcontainer.Container) error {$/;"	f
Loopback	network/loopback.go	/^type Loopback struct {$/;"	t
Major	devices/number.go	/^func Major(devNumber int) int64 {$/;"	f
MemoryStats	cgroups/stats.go	/^type MemoryStats struct {$/;"	t
Minor	devices/number.go	/^func Minor(devNumber int) int64 {$/;"	f
Mkdev	devices/number.go	/^func Mkdev(majorNumber int64, minorNumber int64) int {$/;"	f
Mount	types.go	/^type Mount struct {$/;"	t
Mounts	types.go	/^type Mounts []Mount$/;"	t
MsMoveRoot	mount/msmoveroot.go	/^func MsMoveRoot(rootfs string) error {$/;"	f
Namespace	types.go	/^type ($/;"	t
Namespaces	types.go	/^	}$/;"	t
NetNS	network/netns.go	/^type NetNS struct {$/;"	t
NetlinkRequest	netlink/netlink_linux.go	/^type NetlinkRequest struct {$/;"	t
NetlinkRequestData	netlink/netlink_linux.go	/^type NetlinkRequestData interface {$/;"	t
NetlinkSocket	netlink/netlink_linux.go	/^type NetlinkSocket struct {$/;"	t
Network	container.go	/^type Network struct {$/;"	t
NetworkChangeName	netlink/netlink_linux.go	/^func NetworkChangeName(iface *net.Interface, newName string) error {$/;"	f
NetworkChangeName	netlink/netlink_unsupported.go	/^func NetworkChangeName(iface *net.Interface, newName string) error {$/;"	f
NetworkCreateVethPair	netlink/netlink_linux.go	/^func NetworkCreateVethPair(name1, name2 string) error {$/;"	f
NetworkCreateVethPair	netlink/netlink_unsupported.go	/^func NetworkCreateVethPair(name1, name2 string) error {$/;"	f
NetworkGetRoutes	netlink/netlink_linux.go	/^func NetworkGetRoutes() ([]Route, error) {$/;"	f
NetworkGetRoutes	netlink/netlink_unsupported.go	/^func NetworkGetRoutes() ([]Route, error) {$/;"	f
NetworkLinkAdd	netlink/netlink_linux.go	/^func NetworkLinkAdd(name string, linkType string) error {$/;"	f
NetworkLinkAdd	netlink/netlink_unsupported.go	/^func NetworkLinkAdd(name string, linkType string) error {$/;"	f
NetworkLinkAddIp	netlink/netlink_linux.go	/^func NetworkLinkAddIp(iface *net.Interface, ip net.IP, ipNet *net.IPNet) error {$/;"	f
NetworkLinkAddIp	netlink/netlink_unsupported.go	/^func NetworkLinkAddIp(iface *net.Interface, ip net.IP, ipNet *net.IPNet) error {$/;"	f
NetworkLinkDown	netlink/netlink_linux.go	/^func NetworkLinkDown(iface *net.Interface) error {$/;"	f
NetworkLinkDown	netlink/netlink_unsupported.go	/^func NetworkLinkDown(iface *net.Interface) error {$/;"	f
NetworkLinkUp	netlink/netlink_linux.go	/^func NetworkLinkUp(iface *net.Interface) error {$/;"	f
NetworkLinkUp	netlink/netlink_unsupported.go	/^func NetworkLinkUp(iface *net.Interface) error {$/;"	f
NetworkSetMTU	netlink/netlink_linux.go	/^func NetworkSetMTU(iface *net.Interface, mtu int) error {$/;"	f
NetworkSetMTU	netlink/netlink_unsupported.go	/^func NetworkSetMTU(iface *net.Interface, mtu int) error {$/;"	f
NetworkSetMaster	netlink/netlink_linux.go	/^func NetworkSetMaster(iface, master *net.Interface) error {$/;"	f
NetworkSetMaster	netlink/netlink_unsupported.go	/^func NetworkSetMaster(iface, master *net.Interface) error {$/;"	f
NetworkSetNsFd	netlink/netlink_linux.go	/^func NetworkSetNsFd(iface *net.Interface, fd int) error {$/;"	f
NetworkSetNsFd	netlink/netlink_unsupported.go	/^func NetworkSetNsFd(iface *net.Interface, fd int) error {$/;"	f
NetworkSetNsPid	netlink/netlink_linux.go	/^func NetworkSetNsPid(iface *net.Interface, nspid int) error {$/;"	f
NetworkSetNsPid	netlink/netlink_unsupported.go	/^func NetworkSetNsPid(iface *net.Interface, nspid int) error {$/;"	f
NetworkStrategy	network/strategy.go	/^type NetworkStrategy interface {$/;"	t
NewCgroupTestUtil	cgroups/fs/test_util.go	/^func NewCgroupTestUtil(subsystem string, t *testing.T) *cgroupTestUtil {$/;"	f
NewContext	selinux/selinux.go	/^func NewContext(scon string) SELinuxContext {$/;"	f
NewStats	cgroups/stats.go	/^func NewStats() *Stats {$/;"	f
NewSyncPipe	namespaces/sync_pipe.go	/^func NewSyncPipe() (s *SyncPipe, err error) {$/;"	f
NewSyncPipeFromFd	namespaces/sync_pipe.go	/^func NewSyncPipeFromFd(parendFd, childFd uintptr) (*SyncPipe, error) {$/;"	f
NewTerminal	namespaces/term.go	/^func NewTerminal(stdin io.Reader, stdout, stderr io.Writer, tty bool) Terminal {$/;"	f
NsEnter	namespaces/execin.go	/^func NsEnter(container *libcontainer.Container, processLabel string, nspid int, args []string) error {$/;"	f
OfType	types.go	/^func (s Mounts) OfType(t string) Mounts {$/;"	f
OpenAndDup	console/console.go	/^func OpenAndDup(consolePath string) error {$/;"	f
Parent	namespaces/sync_pipe.go	/^func (s *SyncPipe) Parent() *os.File {$/;"	f
Permissive	selinux/selinux.go	/^	Enforcing        = 1$/;"	c
PivotRoot	mount/pivotroot.go	/^func PivotRoot(rootfs string) error {$/;"	f
ReadFromParent	namespaces/sync_pipe.go	/^func (s *SyncPipe) ReadFromParent() (libcontainer.Context, error) {$/;"	f
ReadProcsFile	cgroups/utils.go	/^func ReadProcsFile(dir string) ([]int, error) {$/;"	f
Receive	netlink/netlink_linux.go	/^func (s *NetlinkSocket) Receive() ([]syscall.NetlinkMessage, error) {$/;"	f
RemountProc	mount/remount.go	/^func RemountProc() error {$/;"	f
RemountSys	mount/remount.go	/^func RemountSys() error {$/;"	f
Remove	cgroups/fs/blkio.go	/^func (s *blkioGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/cpu.go	/^func (s *cpuGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/cpuacct.go	/^func (s *cpuacctGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/devices.go	/^func (s *devicesGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/freezer.go	/^func (s *freezerGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/memory.go	/^func (s *memoryGroup) Remove(d *data) error {$/;"	f
Remove	cgroups/fs/perf_event.go	/^func (s *perfEventGroup) Remove(d *data) error {$/;"	f
ReserveLabel	label/label.go	/^func ReserveLabel(label string) error {$/;"	f
ReserveLabel	label/label_selinux.go	/^func ReserveLabel(label string) error {$/;"	f
ReserveLabel	selinux/selinux.go	/^func ReserveLabel(scon string) {$/;"	f
Resize	namespaces/std_term.go	/^func (s *StdTerminal) Resize(h, w int) error {$/;"	f
Resize	namespaces/tty_term.go	/^func (t *TtyTerminal) Resize(h, w int) error {$/;"	f
ResolveRootfs	utils/utils.go	/^func ResolveRootfs(uncleanRootfs string) (string, error) {$/;"	f
RestoreParentDeathSignal	namespaces/init.go	/^func RestoreParentDeathSignal(old int) error {$/;"	f
Restrict	security/restrict/restrict.go	/^func Restrict(mounts ...string) error {$/;"	f
Restrict	security/restrict/unsupported.go	/^func Restrict() error {$/;"	f
Route	container.go	/^type Route struct {$/;"	t
Route	netlink/netlink.go	/^type Route struct {$/;"	t
RtAttr	netlink/netlink_linux.go	/^type RtAttr struct {$/;"	t
RtMsg	netlink/netlink_linux.go	/^type RtMsg struct {$/;"	t
SELinuxContext	selinux/selinux.go	/^type SELinuxContext map[string]string$/;"	t
SIOC_BRADDBR	netlink/netlink_linux.go	/^	IFLA_NET_NS_FD = 28$/;"	c
SIOC_BRADDIF	netlink/netlink_linux.go	/^	SIOC_BRADDBR   = 0x89a0$/;"	c
SecurityCheckContext	selinux/selinux.go	/^func SecurityCheckContext(val string) error {$/;"	f
SelinuxEnabled	selinux/selinux.go	/^func SelinuxEnabled() bool {$/;"	f
SelinuxGetEnforce	selinux/selinux.go	/^func SelinuxGetEnforce() int {$/;"	f
SelinuxGetEnforceMode	selinux/selinux.go	/^func SelinuxGetEnforceMode() int {$/;"	f
Send	netlink/netlink_linux.go	/^func (s *NetlinkSocket) Send(request *NetlinkRequest) error {$/;"	f
SendToChild	namespaces/sync_pipe.go	/^func (s *SyncPipe) SendToChild(context libcontainer.Context) error {$/;"	f
Set	cgroups/fs/blkio.go	/^func (s *blkioGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/cpu.go	/^func (s *cpuGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/cpuacct.go	/^func (s *cpuacctGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/devices.go	/^func (s *devicesGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/freezer.go	/^func (s *freezerGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/memory.go	/^func (s *memoryGroup) Set(d *data) error {$/;"	f
Set	cgroups/fs/perf_event.go	/^func (s *perfEventGroup) Set(d *data) error {$/;"	f
SetDefaultGateway	network/network.go	/^func SetDefaultGateway(ip, ifaceName string) error {$/;"	f
SetDisabled	selinux/selinux.go	/^func SetDisabled() {$/;"	f
SetFileLabel	label/label.go	/^func SetFileLabel(path string, fileLabel string) error {$/;"	f
SetFileLabel	label/label_selinux.go	/^func SetFileLabel(path string, fileLabel string) error {$/;"	f
SetInterfaceInNamespacePid	network/network.go	/^func SetInterfaceInNamespacePid(name string, nsPid int) error {$/;"	f
SetInterfaceIp	network/network.go	/^func SetInterfaceIp(name string, rawIp string) error {$/;"	f
SetInterfaceMaster	network/network.go	/^func SetInterfaceMaster(name, master string) error {$/;"	f
SetMaster	namespaces/std_term.go	/^func (s *StdTerminal) SetMaster(*os.File) {$/;"	f
SetMaster	namespaces/tty_term.go	/^func (t *TtyTerminal) SetMaster(master *os.File) {$/;"	f
SetMtu	network/network.go	/^func SetMtu(name string, mtu int) error {$/;"	f
SetProcessLabel	label/label.go	/^func SetProcessLabel(processLabel string) error {$/;"	f
SetProcessLabel	label/label_selinux.go	/^func SetProcessLabel(processLabel string) error {$/;"	f
SetReadonly	mount/readonly.go	/^func SetReadonly() error {$/;"	f
Setexeccon	selinux/selinux.go	/^func Setexeccon(scon string) error {$/;"	f
Setfilecon	selinux/selinux.go	/^func Setfilecon(path string, scon string) error {$/;"	f
Setfscreatecon	selinux/selinux.go	/^func Setfscreatecon(scon string) error {$/;"	f
Setup	console/console.go	/^func Setup(rootfs, consolePath, mountLabel string) error {$/;"	f
SetupCgroups	namespaces/exec.go	/^func SetupCgroups(container *libcontainer.Container, nspid int) (cgroups.ActiveCgroup, error) {$/;"	f
SetupCgroups	namespaces/unsupported.go	/^func SetupCgroups(container *libcontainer.Container, nspid int) (cgroups.ActiveCgroup, error) {$/;"	f
SetupPtmx	mount/ptmx.go	/^func SetupPtmx(rootfs, consolePath, mountLabel string) error {$/;"	f
SetupUser	namespaces/init.go	/^func SetupUser(u string) error {$/;"	f
Stats	cgroups/stats.go	/^type Stats struct {$/;"	t
StdTerminal	namespaces/std_term.go	/^type StdTerminal struct {$/;"	t
String	types.go	/^func (c *Capability) String() string {$/;"	f
String	types.go	/^func (ns *Namespace) String() string {$/;"	f
SyncPipe	namespaces/sync_pipe.go	/^type SyncPipe struct {$/;"	t
Terminal	namespaces/term.go	/^type Terminal interface {$/;"	t
TestBlkioStats	cgroups/fs/blkio_test.go	/^func TestBlkioStats(t *testing.T) {$/;"	f
TestBlkioStatsNoQueuedFile	cgroups/fs/blkio_test.go	/^func TestBlkioStatsNoQueuedFile(t *testing.T) {$/;"	f
TestBlkioStatsNoSectorsFile	cgroups/fs/blkio_test.go	/^func TestBlkioStatsNoSectorsFile(t *testing.T) {$/;"	f
TestBlkioStatsNoServiceBytesFile	cgroups/fs/blkio_test.go	/^func TestBlkioStatsNoServiceBytesFile(t *testing.T) {$/;"	f
TestBlkioStatsNoServicedFile	cgroups/fs/blkio_test.go	/^func TestBlkioStatsNoServicedFile(t *testing.T) {$/;"	f
TestBlkioStatsUnexpectedFieldType	cgroups/fs/blkio_test.go	/^func TestBlkioStatsUnexpectedFieldType(t *testing.T) {$/;"	f
TestBlkioStatsUnexpectedNumberOfFields	cgroups/fs/blkio_test.go	/^func TestBlkioStatsUnexpectedNumberOfFields(t *testing.T) {$/;"	f
TestCapabilitiesContains	types_test.go	/^func TestCapabilitiesContains(t *testing.T) {$/;"	f
TestContainerJsonFormat	container_test.go	/^func TestContainerJsonFormat(t *testing.T) {$/;"	f
TestCpuStats	cgroups/fs/cpu_test.go	/^func TestCpuStats(t *testing.T) {$/;"	f
TestGetCgroupParamsInt	cgroups/fs/utils_test.go	/^func TestGetCgroupParamsInt(t *testing.T) {$/;"	f
TestInvalidCpuStat	cgroups/fs/cpu_test.go	/^func TestInvalidCpuStat(t *testing.T) {$/;"	f
TestMemoryStats	cgroups/fs/memory_test.go	/^func TestMemoryStats(t *testing.T) {$/;"	f
TestMemoryStatsBadMaxUsageFile	cgroups/fs/memory_test.go	/^func TestMemoryStatsBadMaxUsageFile(t *testing.T) {$/;"	f
TestMemoryStatsBadStatFile	cgroups/fs/memory_test.go	/^func TestMemoryStatsBadStatFile(t *testing.T) {$/;"	f
TestMemoryStatsBadUsageFile	cgroups/fs/memory_test.go	/^func TestMemoryStatsBadUsageFile(t *testing.T) {$/;"	f
TestMemoryStatsNoMaxUsageFile	cgroups/fs/memory_test.go	/^func TestMemoryStatsNoMaxUsageFile(t *testing.T) {$/;"	f
TestMemoryStatsNoStatFile	cgroups/fs/memory_test.go	/^func TestMemoryStatsNoStatFile(t *testing.T) {$/;"	f
TestMemoryStatsNoUsageFile	cgroups/fs/memory_test.go	/^func TestMemoryStatsNoUsageFile(t *testing.T) {$/;"	f
TestNamespacesContains	types_test.go	/^func TestNamespacesContains(t *testing.T) {$/;"	f
TestNoCpuStatFile	cgroups/fs/cpu_test.go	/^func TestNoCpuStatFile(t *testing.T) {$/;"	f
TestParseCgroups	cgroups/cgroups_test.go	/^func TestParseCgroups(t *testing.T) {$/;"	f
TestSELinux	selinux/selinux_test.go	/^func TestSELinux(t *testing.T) {$/;"	f
Thawed	cgroups/cgroups.go	/^	Frozen    FreezerState = "FROZEN"$/;"	c
ThrottlingData	cgroups/stats.go	/^type ThrottlingData struct {$/;"	t
ToWireFormat	netlink/netlink_linux.go	/^func (a *RtAttr) ToWireFormat() []byte {$/;"	f
ToWireFormat	netlink/netlink_linux.go	/^func (msg *IfAddrmsg) ToWireFormat() []byte {$/;"	f
ToWireFormat	netlink/netlink_linux.go	/^func (msg *IfInfomsg) ToWireFormat() []byte {$/;"	f
ToWireFormat	netlink/netlink_linux.go	/^func (msg *RtMsg) ToWireFormat() []byte {$/;"	f
ToWireFormat	netlink/netlink_linux.go	/^func (rr *NetlinkRequest) ToWireFormat() []byte {$/;"	f
TtyTerminal	namespaces/tty_term.go	/^type TtyTerminal struct {$/;"	t
Undefined	cgroups/cgroups.go	/^const ($/;"	c
UseSystemd	cgroups/systemd/apply_nosystemd.go	/^func UseSystemd() bool {$/;"	f
UseSystemd	cgroups/systemd/apply_systemd.go	/^func UseSystemd() bool {$/;"	f
VETH_INFO_PEER	netlink/netlink_linux.go	/^	IFLA_INFO_DATA = 2$/;"	c
Veth	network/veth.go	/^type Veth struct {$/;"	t
Wildcard	devices/devices.go	/^const ($/;"	c
WritePid	namespaces/pid.go	/^func WritePid(path string, pid int, startTime string) error {$/;"	f
abstrctionsEsists	apparmor/gen.go	/^func abstrctionsEsists() bool {$/;"	f
actualStats	cgroups/fs/blkio_test.go	/^var actualStats = *cgroups.NewStats()$/;"	v
allCapabilityTypes	security/capabilities/capabilities.go	/^const allCapabilityTypes = capability.CAPS | capability.BOUNDS$/;"	c
apparmor	apparmor/apparmor.go	/^package apparmor$/;"	p
apparmor	apparmor/apparmor_disabled.go	/^package apparmor$/;"	p
apparmor	apparmor/gen.go	/^package apparmor$/;"	p
apparmor	apparmor/setup.go	/^package apparmor$/;"	p
appendBlkioStatEntry	cgroups/fs/blkio_test.go	/^func appendBlkioStatEntry(blkioStatEntries *[]cgroups.BlkioStatEntry, major, minor, value uint64, op string) {$/;"	f
assignRegex	selinux/selinux.go	/^var ($/;"	v
baseTemplate	apparmor/gen.go	/^const baseTemplate = `$/;"	c
blkioGroup	cgroups/fs/blkio.go	/^type blkioGroup struct {$/;"	t
blkioStatEntryEquals	cgroups/fs/stats_test_util.go	/^func blkioStatEntryEquals(expected, actual []cgroups.BlkioStatEntry) error {$/;"	f
capabilities	security/capabilities/capabilities.go	/^package capabilities$/;"	p
capabilityList	types.go	/^	namespaceList = Namespaces{}$/;"	v
cgroupArg	cgroups/systemd/apply_systemd.go	/^type cgroupArg struct {$/;"	t
cgroupFile	cgroups/fs/utils_test.go	/^const ($/;"	c
cgroupTestUtil	cgroups/fs/test_util.go	/^type cgroupTestUtil struct {$/;"	t
cgroups	cgroups/cgroups.go	/^package cgroups$/;"	p
cgroups	cgroups/cgroups_test.go	/^package cgroups$/;"	p
cgroups	cgroups/stats.go	/^package cgroups$/;"	p
cgroups	cgroups/utils.go	/^package cgroups$/;"	p
cgroupsContents	cgroups/cgroups_test.go	/^const ($/;"	c
cleanup	cgroups/fs/test_util.go	/^func (c *cgroupTestUtil) cleanup() {$/;"	f
clockTicks	cgroups/fs/cpuacct.go	/^	cpuCount   = uint64(runtime.NumCPU())$/;"	v
connLock	cgroups/systemd/apply_systemd.go	/^var ($/;"	v
console	console/console.go	/^package console$/;"	p
console	nsinit/init.go	/^	dataPath  = os.Getenv("data_path")$/;"	v
contains	container_test.go	/^func contains(expected string, values []string) bool {$/;"	f
copyIfNeeded	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) copyIfNeeded(current, parent string) error {$/;"	f
cpuCount	cgroups/fs/cpuacct.go	/^var ($/;"	v
cpuGroup	cgroups/fs/cpu.go	/^type cpuGroup struct {$/;"	t
cpuacctGroup	cgroups/fs/cpuacct.go	/^type cpuacctGroup struct {$/;"	t
cpusetGroup	cgroups/fs/cpuset.go	/^type cpusetGroup struct {$/;"	t
createIfNotExists	mount/init.go	/^func createIfNotExists(path string, isDir bool) error {$/;"	f
createVethPair	network/veth.go	/^func createVethPair(prefix string) (name1 string, name2 string, err error) {$/;"	f
data	apparmor/gen.go	/^type data struct {$/;"	t
data	cgroups/fs/apply_raw.go	/^type data struct {$/;"	t
dataPath	nsinit/init.go	/^var ($/;"	v
defaultDevice	network/veth.go	/^const defaultDevice = "eth0"$/;"	c
defaultMountFlags	mount/init.go	/^const defaultMountFlags = syscall.MS_NOEXEC | syscall.MS_NOSUID | syscall.MS_NODEV$/;"	c
defaultMountFlags	security/restrict/restrict.go	/^const defaultMountFlags = syscall.MS_NOEXEC | syscall.MS_NOSUID | syscall.MS_NODEV$/;"	c
devices	devices/defaults.go	/^package devices$/;"	p
devices	devices/devices.go	/^package devices$/;"	p
devices	devices/number.go	/^package devices$/;"	p
devicesGroup	cgroups/fs/devices.go	/^type devicesGroup struct {$/;"	t
ensureParent	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) ensureParent(current string) error {$/;"	f
execAction	nsinit/exec.go	/^func execAction(context *cli.Context) {$/;"	f
execCommand	nsinit/exec.go	/^var execCommand = cli.Command{$/;"	v
expectBlkioStatsEquals	cgroups/fs/stats_test_util.go	/^func expectBlkioStatsEquals(t *testing.T, expected, actual cgroups.BlkioStats) {$/;"	f
expectMemoryStatEquals	cgroups/fs/stats_test_util.go	/^func expectMemoryStatEquals(t *testing.T, expected, actual cgroups.MemoryStats) {$/;"	f
expectThrottlingDataEquals	cgroups/fs/stats_test_util.go	/^func expectThrottlingDataEquals(t *testing.T, expected, actual cgroups.ThrottlingData) {$/;"	f
floatString	cgroups/fs/utils_test.go	/^	floatValue  = 2048.0$/;"	c
floatValue	cgroups/fs/utils_test.go	/^	cgroupFile  = "cgroup.file"$/;"	c
freezerGroup	cgroups/fs/freezer.go	/^type freezerGroup struct {$/;"	t
fs	cgroups/fs/apply_raw.go	/^package fs$/;"	p
fs	cgroups/fs/blkio.go	/^package fs$/;"	p
fs	cgroups/fs/blkio_test.go	/^package fs$/;"	p
fs	cgroups/fs/cpu.go	/^package fs$/;"	p
fs	cgroups/fs/cpu_test.go	/^package fs$/;"	p
fs	cgroups/fs/cpuacct.go	/^package fs$/;"	p
fs	cgroups/fs/cpuset.go	/^package fs$/;"	p
fs	cgroups/fs/devices.go	/^package fs$/;"	p
fs	cgroups/fs/freezer.go	/^package fs$/;"	p
fs	cgroups/fs/memory.go	/^package fs$/;"	p
fs	cgroups/fs/memory_test.go	/^package fs$/;"	p
fs	cgroups/fs/perf_event.go	/^package fs$/;"	p
fs	cgroups/fs/stats_test_util.go	/^package fs$/;"	p
fs	cgroups/fs/test_util.go	/^package fs$/;"	p
fs	cgroups/fs/utils.go	/^package fs$/;"	p
fs	cgroups/fs/utils_test.go	/^package fs$/;"	p
generateProfile	apparmor/gen.go	/^func generateProfile(out io.Writer) error {$/;"	f
getBlkioStat	cgroups/fs/blkio.go	/^func getBlkioStat(path string) ([]cgroups.BlkioStatEntry, error) {$/;"	f
getCgroupData	cgroups/fs/apply_raw.go	/^func getCgroupData(c *cgroups.Cgroup, pid int) (*data, error) {$/;"	f
getCgroupParamInt	cgroups/fs/utils.go	/^func getCgroupParamInt(cgroupPath, cgroupFile string) (uint64, error) {$/;"	f
getCgroupParamKeyValue	cgroups/fs/utils.go	/^func getCgroupParamKeyValue(t string) (string, uint64, error) {$/;"	f
getContainerSpec	nsinit/spec.go	/^func getContainerSpec(container *libcontainer.Container) (string, error) {$/;"	f
getContainerStats	nsinit/stats.go	/^func getContainerStats(container *libcontainer.Container) (string, error) {$/;"	f
getCpuUsage	cgroups/fs/cpuacct.go	/^func (s *cpuacctGroup) getCpuUsage(d *data, path string) (uint64, uint64, error) {$/;"	f
getDeviceNodes	devices/devices.go	/^func getDeviceNodes(path string) ([]*Device, error) {$/;"	f
getEnabledCapabilities	security/capabilities/capabilities.go	/^func getEnabledCapabilities(container *libcontainer.Container) []capability.Cap {$/;"	f
getFreezerFileData	cgroups/fs/freezer.go	/^func getFreezerFileData(path string) (string, error) {$/;"	f
getFreezerPath	cgroups/systemd/apply_systemd.go	/^func getFreezerPath(c *cgroups.Cgroup) (string, error) {$/;"	f
getIfSocket	netlink/netlink_linux.go	/^func getIfSocket() (fd int, err error) {$/;"	f
getIfaceForUnit	cgroups/systemd/apply_systemd.go	/^func getIfaceForUnit(unitName string) string {$/;"	f
getIpFamily	netlink/netlink_linux.go	/^func getIpFamily(ip net.IP) int {$/;"	f
getNetlinkSocket	netlink/netlink_linux.go	/^func getNetlinkSocket() (*NetlinkSocket, error) {$/;"	f
getPercpuUsage	cgroups/fs/cpuacct.go	/^func (s *cpuacctGroup) getPercpuUsage(path string) ([]uint64, error) {$/;"	f
getSELinuxPolicyRoot	selinux/selinux.go	/^func getSELinuxPolicyRoot() string {$/;"	f
getSelinuxMountPoint	selinux/selinux.go	/^func getSelinuxMountPoint() string {$/;"	f
getSubsystemSettings	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) getSubsystemSettings(parent string) (cpus []byte, mems []byte, err error) {$/;"	f
getSystemCpuUsage	cgroups/fs/cpuacct.go	/^func (s *cpuacctGroup) getSystemCpuUsage(d *data) (uint64, error) {$/;"	f
getUnitName	cgroups/systemd/apply_systemd.go	/^func getUnitName(c *cgroups.Cgroup) string {$/;"	f
getcon	selinux/selinux.go	/^func getcon() (string, error) {$/;"	f
hasStartTransientUnit	cgroups/systemd/apply_systemd.go	/^	theConn               *systemd1.Conn$/;"	v
ifreqHwaddr	netlink/netlink_linux.go	/^type ifreqHwaddr struct {$/;"	t
ifreqIndex	netlink/netlink_linux.go	/^type ifreqIndex struct {$/;"	t
init	types_linux.go	/^func init() {$/;"	f
initAction	nsinit/init.go	/^func initAction(context *cli.Context) {$/;"	f
initCommand	nsinit/init.go	/^	rawPipeFd = os.Getenv("pipe")$/;"	v
isEmpty	cgroups/fs/cpuset.go	/^func (s *cpusetGroup) isEmpty(b []byte) bool {$/;"	f
join	cgroups/fs/apply_raw.go	/^func (raw *data) join(subsystem string) (string, error) {$/;"	f
joinFreezer	cgroups/systemd/apply_systemd.go	/^func joinFreezer(c *cgroups.Cgroup, pid int) (string, error) {$/;"	f
label	label/label.go	/^package label$/;"	p
label	label/label_selinux.go	/^package label$/;"	p
libcontainer	container.go	/^package libcontainer$/;"	p
libcontainer	container_test.go	/^package libcontainer$/;"	p
libcontainer	types.go	/^package libcontainer$/;"	p
libcontainer	types_linux.go	/^package libcontainer$/;"	p
libcontainer	types_test.go	/^package libcontainer$/;"	p
loadContainer	nsinit/utils.go	/^func loadContainer() (*libcontainer.Container, error) {$/;"	f
loadContainerFromJson	nsinit/utils.go	/^func loadContainerFromJson(rawData string) (*libcontainer.Container, error) {$/;"	f
logPath	nsinit/main.go	/^var logPath = os.Getenv("log")$/;"	v
main	nsinit/exec.go	/^package main$/;"	p
main	nsinit/init.go	/^package main$/;"	p
main	nsinit/main.go	/^func main() {$/;"	f
main	nsinit/main.go	/^package main$/;"	p
main	nsinit/nsenter.go	/^package main$/;"	p
main	nsinit/spec.go	/^package main$/;"	p
main	nsinit/stats.go	/^package main$/;"	p
main	nsinit/utils.go	/^package main$/;"	p
mcsAdd	selinux/selinux.go	/^func mcsAdd(mcs string) error {$/;"	f
mcsDelete	selinux/selinux.go	/^func mcsDelete(mcs string) {$/;"	f
mcsExists	selinux/selinux.go	/^func mcsExists(mcs string) bool {$/;"	f
mcsList	selinux/selinux.go	/^	spaceRegex            = regexp.MustCompile(`^([^=]+) (.*)$`)$/;"	v
memoryFailcnt	cgroups/fs/memory_test.go	/^	memoryMaxUsageContents = "4096\\n"$/;"	c
memoryGroup	cgroups/fs/memory.go	/^type memoryGroup struct {$/;"	t
memoryMaxUsageContents	cgroups/fs/memory_test.go	/^	memoryUsageContents    = "2048\\n"$/;"	c
memoryStatContents	cgroups/fs/memory_test.go	/^const ($/;"	c
memoryUsageContents	cgroups/fs/memory_test.go	/^rss 1024`$/;"	c
mount	mount/init.go	/^package mount$/;"	p
mount	mount/init.go	/^type mount struct {$/;"	t
mount	mount/msmoveroot.go	/^package mount$/;"	p
mount	mount/pivotroot.go	/^package mount$/;"	p
mount	mount/ptmx.go	/^package mount$/;"	p
mount	mount/readonly.go	/^package mount$/;"	p
mount	mount/remount.go	/^package mount$/;"	p
mountReadonly	security/restrict/restrict.go	/^func mountReadonly(path string) error {$/;"	f
mountSystem	mount/init.go	/^func mountSystem(rootfs string, container *libcontainer.Container) error {$/;"	f
namespaceList	types.go	/^var ($/;"	v
namespaces	namespaces/create.go	/^package namespaces$/;"	p
namespaces	namespaces/exec.go	/^package namespaces$/;"	p
namespaces	namespaces/execin.go	/^package namespaces$/;"	p
namespaces	namespaces/init.go	/^package namespaces$/;"	p
namespaces	namespaces/nsenter.go	/^package namespaces$/;"	p
namespaces	namespaces/pid.go	/^package namespaces$/;"	p
namespaces	namespaces/std_term.go	/^package namespaces$/;"	p
namespaces	namespaces/sync_pipe.go	/^package namespaces$/;"	p
namespaces	namespaces/term.go	/^package namespaces$/;"	p
namespaces	namespaces/tty_term.go	/^package namespaces$/;"	p
namespaces	namespaces/unsupported.go	/^package namespaces$/;"	p
nanosecondsInSecond	cgroups/fs/cpuacct.go	/^const nanosecondsInSecond = 1000000000$/;"	c
nativeEndian	netlink/netlink_linux.go	/^func nativeEndian() binary.ByteOrder {$/;"	f
netlink	netlink/netlink.go	/^package netlink$/;"	p
netlink	netlink/netlink_linux.go	/^package netlink$/;"	p
netlink	netlink/netlink_unsupported.go	/^package netlink$/;"	p
network	network/loopback.go	/^package network$/;"	p
network	network/netns.go	/^package network$/;"	p
network	network/network.go	/^package network$/;"	p
network	network/strategy.go	/^package network$/;"	p
network	network/veth.go	/^package network$/;"	p
newIfAddrmsg	netlink/netlink_linux.go	/^func newIfAddrmsg(family int) *IfAddrmsg {$/;"	f
newIfInfomsg	netlink/netlink_linux.go	/^func newIfInfomsg(family int) *IfInfomsg {$/;"	f
newIfInfomsgChild	netlink/netlink_linux.go	/^func newIfInfomsgChild(parent *RtAttr, family int) *IfInfomsg {$/;"	f
newNetlinkRequest	netlink/netlink_linux.go	/^func newNetlinkRequest(proto, flags int) *NetlinkRequest {$/;"	f
newRtAttr	netlink/netlink_linux.go	/^func newRtAttr(attrType int, data []byte) *RtAttr {$/;"	f
newRtAttrChild	netlink/netlink_linux.go	/^func newRtAttrChild(parent *RtAttr, attrType int, data []byte) *RtAttr {$/;"	f
newRtMsg	netlink/netlink_linux.go	/^func newRtMsg() *RtMsg {$/;"	f
newSystemMounts	mount/init.go	/^func newSystemMounts(rootfs, mountLabel string, mounts libcontainer.Mounts) []mount {$/;"	f
nextSeqNr	netlink/netlink_linux.go	/^var nextSeqNr uint32$/;"	v
nodes	mount/nodes/nodes.go	/^package nodes$/;"	p
nodes	mount/nodes/nodes_unsupported.go	/^package nodes$/;"	p
nonZeroTerminated	netlink/netlink_linux.go	/^func nonZeroTerminated(s string) []byte {$/;"	f
nsenterAction	nsinit/nsenter.go	/^func nsenterAction(context *cli.Context) {$/;"	f
nsenterCommand	nsinit/nsenter.go	/^var nsenterCommand = cli.Command{$/;"	v
openLog	nsinit/utils.go	/^func openLog(name string) error {$/;"	f
parent	cgroups/fs/apply_raw.go	/^func (raw *data) parent(subsystem string) (string, error) {$/;"	f
parseCgroupFile	cgroups/utils.go	/^func parseCgroupFile(subsystem string, r io.Reader) (string, error) {$/;"	f
path	cgroups/fs/apply_raw.go	/^func (raw *data) path(subsystem string) (string, error) {$/;"	f
perfEventGroup	cgroups/fs/perf_event.go	/^type perfEventGroup struct {$/;"	t
preload	nsinit/main.go	/^func preload(context *cli.Context) error {$/;"	f
queuedRecursiveContents	cgroups/fs/blkio_test.go	/^Total 50`$/;"	c
rawPipeFd	nsinit/init.go	/^	console   = os.Getenv("console")$/;"	v
readCon	selinux/selinux.go	/^func readCon(name string) (string, error) {$/;"	f
readConfig	selinux/selinux.go	/^func readConfig(target string) (value string) {$/;"	f
readFile	cgroups/fs/apply_raw.go	/^func readFile(dir, file string) (string, error) {$/;"	f
readPid	nsinit/utils.go	/^func readPid() (int, error) {$/;"	f
removePath	cgroups/fs/apply_raw.go	/^func removePath(p string, err error) error {$/;"	f
restrict	security/restrict/restrict.go	/^package restrict$/;"	p
restrict	security/restrict/unsupported.go	/^package restrict$/;"	p
rtaAlignOf	netlink/netlink_linux.go	/^func rtaAlignOf(attrlen int) int {$/;"	f
sectorsRecursiveContents	cgroups/fs/blkio_test.go	/^const ($/;"	c
selinux	selinux/selinux.go	/^package selinux$/;"	p
selinuxConfig	selinux/selinux.go	/^	selinuxDir       = "\/etc\/selinux\/"$/;"	c
selinuxDir	selinux/selinux.go	/^	Disabled         = -1$/;"	c
selinuxEnabled	selinux/selinux.go	/^	selinuxfs             = "unknown"$/;"	v
selinuxEnabledChecked	selinux/selinux.go	/^	selinuxEnabled        = false$/;"	v
selinuxPath	selinux/selinux.go	/^	selinuxTag       = "SELINUX"$/;"	c
selinuxTag	selinux/selinux.go	/^	selinuxTypeTag   = "SELINUXTYPE"$/;"	c
selinuxTypeTag	selinux/selinux.go	/^	selinuxConfig    = selinuxDir + "config"$/;"	c
selinux_test	selinux/selinux_test.go	/^package selinux_test$/;"	p
selinuxfs	selinux/selinux.go	/^	mcsList               = make(map[string]bool)$/;"	v
serviceBytesRecursiveContents	cgroups/fs/blkio_test.go	/^	sectorsRecursiveContents      = `8:0 1024`$/;"	c
servicedRecursiveContents	cgroups/fs/blkio_test.go	/^Total 500`$/;"	c
setBridgeMacAddress	netlink/netlink_linux.go	/^func setBridgeMacAddress(s int, name string) error {$/;"	f
setupBindmounts	mount/init.go	/^func setupBindmounts(rootfs string, bindMounts libcontainer.Mounts) error {$/;"	f
setupDevSymlinks	mount/init.go	/^func setupDevSymlinks(rootfs string) error {$/;"	f
setupNetwork	namespaces/init.go	/^func setupNetwork(container *libcontainer.Container, context libcontainer.Context) error {$/;"	f
setupRoute	namespaces/init.go	/^func setupRoute(container *libcontainer.Container) error {$/;"	f
setupWindow	namespaces/tty_term.go	/^func (t *TtyTerminal) setupWindow(master, parent *os.File) (*term.State, error) {$/;"	f
spaceRegex	selinux/selinux.go	/^	assignRegex           = regexp.MustCompile(`^([^=]+)=(.*)$`)$/;"	v
specAction	nsinit/spec.go	/^func specAction(context *cli.Context) {$/;"	f
specCommand	nsinit/spec.go	/^var specCommand = cli.Command{$/;"	v
splitBlkioStatLine	cgroups/fs/blkio.go	/^func splitBlkioStatLine(r rune) bool {$/;"	f
stRdOnly	selinux/selinux.go	/^	xattrNameSelinux = "security.selinux"$/;"	c
startContainer	nsinit/exec.go	/^func startContainer(container *libcontainer.Container, term namespaces.Terminal, dataPath string, args []string) (int, error) {$/;"	f
statsAction	nsinit/stats.go	/^func statsAction(context *cli.Context) {$/;"	f
statsCommand	nsinit/stats.go	/^var statsCommand = cli.Command{$/;"	v
strategies	network/strategy.go	/^var strategies = map[string]NetworkStrategy{$/;"	v
subsystem	cgroups/fs/apply_raw.go	/^type subsystem interface {$/;"	t
subsystems	cgroups/fs/apply_raw.go	/^var ($/;"	v
systemd	cgroups/systemd/apply_nosystemd.go	/^package systemd$/;"	p
systemd	cgroups/systemd/apply_systemd.go	/^package systemd$/;"	p
systemdCgroup	cgroups/systemd/apply_systemd.go	/^type systemdCgroup struct {$/;"	t
testSetfilecon	selinux/selinux_test.go	/^func testSetfilecon(t *testing.T) {$/;"	f
theConn	cgroups/systemd/apply_systemd.go	/^	connLock              sync.Mutex$/;"	v
tuntablesExists	apparmor/gen.go	/^func tuntablesExists() bool {$/;"	f
uniqMcs	selinux/selinux.go	/^func uniqMcs(catRange uint32) string {$/;"	f
utils	utils/utils.go	/^package utils$/;"	p
writeCon	selinux/selinux.go	/^func writeCon(name string, val string) error {$/;"	f
writeFile	cgroups/fs/apply_raw.go	/^func writeFile(dir, file, data string) error {$/;"	f
writeFile	cgroups/systemd/apply_systemd.go	/^func writeFile(dir, file, data string) error {$/;"	f
writeFileContents	cgroups/fs/test_util.go	/^func (c *cgroupTestUtil) writeFileContents(fileContents map[string]string) {$/;"	f
xattrNameSelinux	selinux/selinux.go	/^	selinuxPath      = "\/sys\/fs\/selinux"$/;"	c
zeroTerminated	netlink/netlink_linux.go	/^func zeroTerminated(s string) []byte {$/;"	f

!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Attach	std_term.go	/^func (s *StdTerminal) Attach(command *exec.Cmd) error {$/;"	f
Attach	tty_term.go	/^func (t *TtyTerminal) Attach(command *exec.Cmd) error {$/;"	f
Child	sync_pipe.go	/^func (s *SyncPipe) Child() *os.File {$/;"	f
Close	std_term.go	/^func (s *StdTerminal) Close() error {$/;"	f
Close	sync_pipe.go	/^func (s *SyncPipe) Close() error {$/;"	f
Close	tty_term.go	/^func (t *TtyTerminal) Close() error {$/;"	f
CreateCommand	create.go	/^type CreateCommand func(container *libcontainer.Container, console, rootfs, dataPath, init string, childPipe *os.File, args []string) *exec.Cmd$/;"	t
DefaultCreateCommand	exec.go	/^func DefaultCreateCommand(container *libcontainer.Container, console, rootfs, dataPath, init string, pipe *os.File, args []string) *exec.Cmd {$/;"	f
DeletePid	pid.go	/^func DeletePid(path string) error {$/;"	f
Exec	exec.go	/^func Exec(container *libcontainer.Container, term Terminal, rootfs, dataPath string, args []string, createCommand CreateCommand, startCallback func()) (int, error) {$/;"	f
Exec	unsupported.go	/^func Exec(container *libcontainer.Container, term Terminal, rootfs, dataPath string, args []string, createCommand CreateCommand, startCallback func()) (int, error) {$/;"	f
ExecIn	execin.go	/^func ExecIn(container *libcontainer.Container, nspid int, args []string) error {$/;"	f
FinalizeNamespace	init.go	/^func FinalizeNamespace(container *libcontainer.Container) error {$/;"	f
GetNamespaceFlags	exec.go	/^func GetNamespaceFlags(namespaces map[string]bool) (flag int) {$/;"	f
GetNamespaceFlags	unsupported.go	/^func GetNamespaceFlags(namespaces map[string]bool) (flag int) {$/;"	f
Init	init.go	/^func Init(container *libcontainer.Container, uncleanRootfs, consolePath string, syncPipe *SyncPipe, args []string) error {$/;"	f
Init	unsupported.go	/^func Init(container *libcontainer.Container, uncleanRootfs, consolePath string, syncPipe *SyncPipe, args []string) error {$/;"	f
InitializeNetworking	exec.go	/^func InitializeNetworking(container *libcontainer.Container, nspid int, pipe *SyncPipe) error {$/;"	f
InitializeNetworking	unsupported.go	/^func InitializeNetworking(container *libcontainer.Container, nspid int, pipe *SyncPipe) error {$/;"	f
LoadContainerEnvironment	init.go	/^func LoadContainerEnvironment(container *libcontainer.Container) error {$/;"	f
NewSyncPipe	sync_pipe.go	/^func NewSyncPipe() (s *SyncPipe, err error) {$/;"	f
NewSyncPipeFromFd	sync_pipe.go	/^func NewSyncPipeFromFd(parendFd, childFd uintptr) (*SyncPipe, error) {$/;"	f
NewTerminal	term.go	/^func NewTerminal(stdin io.Reader, stdout, stderr io.Writer, tty bool) Terminal {$/;"	f
NsEnter	execin.go	/^func NsEnter(container *libcontainer.Container, processLabel string, nspid int, args []string) error {$/;"	f
Parent	sync_pipe.go	/^func (s *SyncPipe) Parent() *os.File {$/;"	f
ReadFromParent	sync_pipe.go	/^func (s *SyncPipe) ReadFromParent() (libcontainer.Context, error) {$/;"	f
Resize	std_term.go	/^func (s *StdTerminal) Resize(h, w int) error {$/;"	f
Resize	tty_term.go	/^func (t *TtyTerminal) Resize(h, w int) error {$/;"	f
RestoreParentDeathSignal	init.go	/^func RestoreParentDeathSignal(old int) error {$/;"	f
SendToChild	sync_pipe.go	/^func (s *SyncPipe) SendToChild(context libcontainer.Context) error {$/;"	f
SetMaster	std_term.go	/^func (s *StdTerminal) SetMaster(*os.File) {$/;"	f
SetMaster	tty_term.go	/^func (t *TtyTerminal) SetMaster(master *os.File) {$/;"	f
SetupCgroups	exec.go	/^func SetupCgroups(container *libcontainer.Container, nspid int) (cgroups.ActiveCgroup, error) {$/;"	f
SetupCgroups	unsupported.go	/^func SetupCgroups(container *libcontainer.Container, nspid int) (cgroups.ActiveCgroup, error) {$/;"	f
SetupUser	init.go	/^func SetupUser(u string) error {$/;"	f
StdTerminal	std_term.go	/^type StdTerminal struct {$/;"	t
SyncPipe	sync_pipe.go	/^type SyncPipe struct {$/;"	t
Terminal	term.go	/^type Terminal interface {$/;"	t
TtyTerminal	tty_term.go	/^type TtyTerminal struct {$/;"	t
WritePid	pid.go	/^func WritePid(path string, pid int, startTime string) error {$/;"	f
namespaces	create.go	/^package namespaces$/;"	p
namespaces	exec.go	/^package namespaces$/;"	p
namespaces	execin.go	/^package namespaces$/;"	p
namespaces	init.go	/^package namespaces$/;"	p
namespaces	nsenter.go	/^package namespaces$/;"	p
namespaces	pid.go	/^package namespaces$/;"	p
namespaces	std_term.go	/^package namespaces$/;"	p
namespaces	sync_pipe.go	/^package namespaces$/;"	p
namespaces	term.go	/^package namespaces$/;"	p
namespaces	tty_term.go	/^package namespaces$/;"	p
namespaces	unsupported.go	/^package namespaces$/;"	p
setupNetwork	init.go	/^func setupNetwork(container *libcontainer.Container, context libcontainer.Context) error {$/;"	f
setupRoute	init.go	/^func setupRoute(container *libcontainer.Container) error {$/;"	f
setupWindow	tty_term.go	/^func (t *TtyTerminal) setupWindow(master, parent *os.File) (*term.State, error) {$/;"	f
